{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { LoginComponent } from './login.component';\ndescribe('LoginComponent', () => {\n  let component;\n  let fixture;\n  let loginSpy;\n\n  function updateForm(userName) {\n    fixture.componentInstance.loginAdmin['username'].setValue(userName);\n  }\n\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [LoginComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(LoginComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('initial state'), () => {\n    expect(component.loginAdmin).toBeDefined();\n  };\n  it('Display Username Error Msg when Username is blank', () => {//     updateForm(\"\");\n    //     fixture.detectChanges();\n    // ​\n    //     const button = fixture.debugElement.nativeElement.querySelector('button');\n    //     button.click();\n    //     fixture.detectChanges();\n    // ​\n    //     const usernameErrorMsg = fixture.debugElement.nativeElement.querySelector('#username-error-msg');\n    //     expect(usernameErrorMsg).toBeDefined();\n    //     expect(usernameErrorMsg.innerHTML).toContain('Please enter username');\n  });\n  it('should route to overview if login successfully'), () => {//     updateForm(validUser.username);\n    //     fixture.detectChanges();\n    //     const button = fixture.debugElement.nativeElement.querySelector('button');\n    //     button.click();\n    //     advance(fixture);\n    // ​\n    //     loginSpy = loginServiceSpy.login.and.returnValue(Promise.resolve(testUserData));\n    //     advance(fixture);\n    // ​\n    //     expect(routerSpy.navigateByUrl).toHaveBeenCalled();\n    //     const navArgs = routerSpy.navigateByUrl.calls.first().args[0];\n    //     // expecting to navigate to id of the component's first hero\n    //     expect(navArgs).toBe('/home', 'should nav to Home Page');    \n  };\n});","map":{"version":3,"sources":["C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/src/app/components/admin/login/login.component.spec.ts"],"names":["TestBed","LoginComponent","describe","component","fixture","loginSpy","updateForm","userName","componentInstance","loginAdmin","setValue","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","detectChanges","it","expect","toBeTruthy","toBeDefined"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACAC,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC7B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,QAAJ;;AACA,WAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1BH,IAAAA,OAAO,CAACI,iBAAR,CAA0BC,UAA1B,CAAqC,UAArC,EAAiDC,QAAjD,CAA0DH,QAA1D;AACH;;AACDI,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMX,OAAO,CAACY,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACZ,cAAD;AADmB,KAA/B,EAGDa,iBAHC,EAAN;AAIH,GALS,EAAV;AAMAH,EAAAA,UAAU,CAAC,MAAM;AACbP,IAAAA,OAAO,GAAGJ,OAAO,CAACe,eAAR,CAAwBd,cAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACI,iBAApB;AACAJ,IAAAA,OAAO,CAACY,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACf,SAAD,CAAN,CAAkBgB,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,eAAD,CAAF,EAAqB,MAAM;AACvBC,IAAAA,MAAM,CAACf,SAAS,CAACM,UAAX,CAAN,CAA6BW,WAA7B;AACH,GAFD;AAGAH,EAAAA,EAAE,CAAC,mDAAD,EAAsD,MAAM,CAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXC,CAAF;AAYAA,EAAAA,EAAE,CAAC,gDAAD,CAAF,EAAsD,MAAM,CACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAdD;AAeH,CAnDO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { LoginComponent } from './login.component';\r\ndescribe('LoginComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let loginSpy;\r\n    function updateForm(userName) {\r\n        fixture.componentInstance.loginAdmin['username'].setValue(userName);\r\n    }\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [LoginComponent]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(LoginComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('initial state'), () => {\r\n        expect(component.loginAdmin).toBeDefined();\r\n    };\r\n    it('Display Username Error Msg when Username is blank', () => {\r\n        //     updateForm(\"\");\r\n        //     fixture.detectChanges();\r\n        // ​\r\n        //     const button = fixture.debugElement.nativeElement.querySelector('button');\r\n        //     button.click();\r\n        //     fixture.detectChanges();\r\n        // ​\r\n        //     const usernameErrorMsg = fixture.debugElement.nativeElement.querySelector('#username-error-msg');\r\n        //     expect(usernameErrorMsg).toBeDefined();\r\n        //     expect(usernameErrorMsg.innerHTML).toContain('Please enter username');\r\n    });\r\n    it('should route to overview if login successfully'), () => {\r\n        //     updateForm(validUser.username);\r\n        //     fixture.detectChanges();\r\n        //     const button = fixture.debugElement.nativeElement.querySelector('button');\r\n        //     button.click();\r\n        //     advance(fixture);\r\n        // ​\r\n        //     loginSpy = loginServiceSpy.login.and.returnValue(Promise.resolve(testUserData));\r\n        //     advance(fixture);\r\n        // ​\r\n        //     expect(routerSpy.navigateByUrl).toHaveBeenCalled();\r\n        //     const navArgs = routerSpy.navigateByUrl.calls.first().args[0];\r\n        //     // expecting to navigate to id of the component's first hero\r\n        //     expect(navArgs).toBe('/home', 'should nav to Home Page');    \r\n    };\r\n});\r\n"]},"metadata":{},"sourceType":"module"}