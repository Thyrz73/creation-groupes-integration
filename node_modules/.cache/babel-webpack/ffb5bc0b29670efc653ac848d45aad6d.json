{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { RouterTestingModule } from '@angular/router/testing';\ndescribe('LoginComponent', () => {\n  let component;\n  let fixture;\n  let loginSpy;\n\n  function updateForm(userName) {\n    fixture.componentInstance.loginAdmin(userName);\n  }\n\n  const routerSpy = jasmine.createSpyObj('Router', ['navigateByUrl']);\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [LoginComponent],\n      imports: [AngularFireModule.initializeApp(environment.firebaseConfig), RouterModule.forRoot([]), RouterTestingModule],\n      providers: [DatabaseService]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(LoginComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    spyOn(component.router, 'navigate');\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('initial state'), () => {\n    expect(component.loginAdmin).toBeDefined();\n    expect(component.username).toBeUndefined();\n  };\n  it('should return login ok when login=admin', () => {\n    expect(component.loginAdmin('admin')).toEqual('login ok');\n  });\n  it('should return login error when login!=admin or empty', () => {\n    expect(component.loginAdmin('')).toEqual('login error');\n    expect(component.loginAdmin('admi')).toEqual('login error');\n  });\n  it('should display error on screen when login incorrect', () => {// TODO\n  });\n  it('should route to overview if login successfully'), () => {\n    // TODO\n    // fixture.detectChanges();\n    // const btn = fixture.debugElement.nativeElement.querySelector('btn');\n    // btn.click();\n    // fixture.detectChanges();\n    spyOn(component.router, 'navigate');\n    component.loginAdmin(\"admin\");\n    fixture.detectChanges();\n    expect(component.router.navigate).toHaveBeenCalledWith(['/config']);\n  }; // it('should route to overview if login successfully'), () => {\n  //   // TODO\n  //   //component.loginAdmin(\"admin\");\n  //   updateForm(\"admin\");\n  //   fixture.detectChanges();\n  //   expect(routerSpy.navigateByUrl).toHaveBeenCalled();\n  //   const navArgs = routerSpy.navigateByUrl.calls.first().args[0];\n  //   expect(navArgs).toBe('/config', 'should nav to Home Page');\n  // }\n});","map":{"version":3,"sources":["C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/src/app/components/admin/login/login.component.spec.ts"],"names":["TestBed","RouterModule","LoginComponent","environment","AngularFireModule","DatabaseService","RouterTestingModule","describe","component","fixture","loginSpy","updateForm","userName","componentInstance","loginAdmin","routerSpy","jasmine","createSpyObj","beforeEach","configureTestingModule","declarations","imports","initializeApp","firebaseConfig","forRoot","providers","compileComponents","createComponent","detectChanges","spyOn","router","it","expect","toBeTruthy","toBeDefined","username","toBeUndefined","toEqual","navigate","toHaveBeenCalledWith"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\ndescribe('LoginComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let loginSpy;\r\n    function updateForm(userName) {\r\n        fixture.componentInstance.loginAdmin(userName);\r\n    }\r\n    const routerSpy = jasmine.createSpyObj('Router', ['navigateByUrl']);\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [LoginComponent],\r\n            imports: [AngularFireModule.initializeApp(environment.firebaseConfig),\r\n                RouterModule.forRoot([]),\r\n                RouterTestingModule],\r\n            providers: [DatabaseService]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(LoginComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n        spyOn(component.router, 'navigate');\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('initial state'), () => {\r\n        expect(component.loginAdmin).toBeDefined();\r\n        expect(component.username).toBeUndefined();\r\n    };\r\n    it('should return login ok when login=admin', () => {\r\n        expect(component.loginAdmin('admin')).toEqual('login ok');\r\n    });\r\n    it('should return login error when login!=admin or empty', () => {\r\n        expect(component.loginAdmin('')).toEqual('login error');\r\n        expect(component.loginAdmin('admi')).toEqual('login error');\r\n    });\r\n    it('should display error on screen when login incorrect', () => {\r\n        // TODO\r\n    });\r\n    it('should route to overview if login successfully'), () => {\r\n        // TODO\r\n        // fixture.detectChanges();\r\n        // const btn = fixture.debugElement.nativeElement.querySelector('btn');\r\n        // btn.click();\r\n        // fixture.detectChanges();\r\n        spyOn(component.router, 'navigate');\r\n        component.loginAdmin(\"admin\");\r\n        fixture.detectChanges();\r\n        expect(component.router.navigate).toHaveBeenCalledWith(['/config']);\r\n    };\r\n    // it('should route to overview if login successfully'), () => {\r\n    //   // TODO\r\n    //   //component.loginAdmin(\"admin\");\r\n    //   updateForm(\"admin\");\r\n    //   fixture.detectChanges();\r\n    //   expect(routerSpy.navigateByUrl).toHaveBeenCalled();\r\n    //   const navArgs = routerSpy.navigateByUrl.calls.first().args[0];\r\n    //   expect(navArgs).toBe('/config', 'should nav to Home Page');\r\n    // }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}