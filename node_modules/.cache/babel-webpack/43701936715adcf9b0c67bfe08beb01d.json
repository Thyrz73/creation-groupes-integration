{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\Users\\\\belai\\\\Documents\\\\M1\\\\Integration\\\\group_creation\\\\group-creation\\\\creation-groupes-integration\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./dashboard.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./dashboard.component.css\";\nimport { Component } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { SharedService } from 'src/app/services/shared.service';\nlet DashboardComponent = class DashboardComponent {\n  constructor(databaseService, sharedService) {\n    this.databaseService = databaseService;\n    this.sharedService = sharedService;\n    this.random = '';\n    this.groupName = '';\n    this.noGroup = true;\n    this.currentUser = '';\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.currentUser = this.sharedService.getCurrentUsername();\n    this.disableRandom();\n    (_a = document.getElementById(\"list-container\")) === null || _a === void 0 ? void 0 : _a.remove();\n  }\n\n  randomGroup() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.sharedService.setRandomClicked();\n\n      _this.disableRandom();\n\n      yield _this.databaseService.getGroupName(_this.currentUser).then(res => {\n        _this.groupName = res;\n      });\n      console.log(\"GROUPE CHANGE = \", parseInt(_this.groupName));\n      parseInt(_this.groupName) !== 0 ? document.getElementById(\"already-group\").style.display = \"inline\" : yield _this.databaseService.getIncompleteGroups().then(res => {\n        _this.random = res[Math.floor(Math.random() * res.length)].toString();\n        document.getElementById(\"group-name\").style.display = \"inline\";\n\n        _this.databaseService.putInRandomGroup(_this.currentUser, _this.random);\n\n        return res;\n      });\n    })();\n  }\n\n  disableRandom() {\n    var _a, _b; // console.log(this.sharedService.getRandomClicked());\n\n\n    if (this.sharedService.getRandomClicked()) {\n      (_a = document.getElementById(\"btn-random\")) === null || _a === void 0 ? void 0 : _a.setAttribute(\"style\", \"pointer-events:none\");\n      (_b = document.getElementById(\"btn-random\")) === null || _b === void 0 ? void 0 : _b.setAttribute(\"style\", \"background-color:gray\");\n    }\n  }\n\n};\n\nDashboardComponent.ctorParameters = () => [{\n  type: DatabaseService\n}, {\n  type: SharedService\n}];\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"sources":["C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/src/app/components/users/dashboard/dashboard.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","DatabaseService","SharedService","DashboardComponent","constructor","databaseService","sharedService","random","groupName","noGroup","currentUser","ngOnInit","_a","getCurrentUsername","disableRandom","document","getElementById","remove","randomGroup","setRandomClicked","getGroupName","then","res","console","log","parseInt","style","display","getIncompleteGroups","Math","floor","length","toString","putInRandomGroup","_b","getRandomClicked","setAttribute","ctorParameters","type","selector","template","styles"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,oBAAP,MAAiC,2MAAjC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,IAAIC,kBAAkB,GAAG,MAAMA,kBAAN,CAAyB;AAC9CC,EAAAA,WAAW,CAACC,eAAD,EAAkBC,aAAlB,EAAiC;AACxC,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,QAAIC,EAAJ;;AACA,SAAKF,WAAL,GAAmB,KAAKJ,aAAL,CAAmBO,kBAAnB,EAAnB;AACA,SAAKC,aAAL;AACA,KAACF,EAAE,GAAGG,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAN,MAAqD,IAArD,IAA6DJ,EAAE,KAAK,KAAK,CAAzE,GAA6E,KAAK,CAAlF,GAAsFA,EAAE,CAACK,MAAH,EAAtF;AACH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,MAAA,KAAI,CAACZ,aAAL,CAAmBa,gBAAnB;;AACA,MAAA,KAAI,CAACL,aAAL;;AACA,YAAM,KAAI,CAACT,eAAL,CAAqBe,YAArB,CAAkC,KAAI,CAACV,WAAvC,EAAoDW,IAApD,CAA0DC,GAAD,IAAS;AACpE,QAAA,KAAI,CAACd,SAAL,GAAiBc,GAAjB;AACH,OAFK,CAAN;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,QAAQ,CAAC,KAAI,CAACjB,SAAN,CAAxC;AACAiB,MAAAA,QAAQ,CAAC,KAAI,CAACjB,SAAN,CAAR,KAA6B,CAA7B,GACIO,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCU,KAAzC,CAA+CC,OAA/C,GAAyD,QAD7D,SAGc,KAAI,CAACtB,eAAL,CAAqBuB,mBAArB,GAA2CP,IAA3C,CAAiDC,GAAD,IAAS;AAC3D,QAAA,KAAI,CAACf,MAAL,GAAce,GAAG,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACtB,MAAL,KAAgBe,GAAG,CAACS,MAA/B,CAAD,CAAH,CAA4CC,QAA5C,EAAd;AACAjB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCU,KAAtC,CAA4CC,OAA5C,GAAsD,QAAtD;;AACA,QAAA,KAAI,CAACtB,eAAL,CAAqB4B,gBAArB,CAAsC,KAAI,CAACvB,WAA3C,EAAwD,KAAI,CAACH,MAA7D;;AACA,eAAOe,GAAP;AACH,OALK,CAHd;AAPgB;AAgBnB;;AACDR,EAAAA,aAAa,GAAG;AACZ,QAAIF,EAAJ,EAAQsB,EAAR,CADY,CAEZ;;;AACA,QAAI,KAAK5B,aAAL,CAAmB6B,gBAAnB,EAAJ,EAA2C;AACvC,OAACvB,EAAE,GAAGG,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAN,MAAiD,IAAjD,IAAyDJ,EAAE,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,EAAE,CAACwB,YAAH,CAAgB,OAAhB,EAAyB,qBAAzB,CAAlF;AACA,OAACF,EAAE,GAAGnB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAN,MAAiD,IAAjD,IAAyDkB,EAAE,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,EAAE,CAACE,YAAH,CAAgB,OAAhB,EAAyB,uBAAzB,CAAlF;AACH;AACJ;;AAvC6C,CAAlD;;AAyCAjC,kBAAkB,CAACkC,cAAnB,GAAoC,MAAM,CACtC;AAAEC,EAAAA,IAAI,EAAErC;AAAR,CADsC,EAEtC;AAAEqC,EAAAA,IAAI,EAAEpC;AAAR,CAFsC,CAA1C;;AAIAC,kBAAkB,GAAGN,UAAU,CAAC,CAC5BG,SAAS,CAAC;AACNuC,EAAAA,QAAQ,EAAE,eADJ;AAENC,EAAAA,QAAQ,EAAE1C,oBAFJ;AAGN2C,EAAAA,MAAM,EAAE,CAAC1C,oBAAD;AAHF,CAAD,CADmB,CAAD,EAM5BI,kBAN4B,CAA/B;AAOA,SAASA,kBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\Users\\\\belai\\\\Documents\\\\M1\\\\Integration\\\\group_creation\\\\group-creation\\\\creation-groupes-integration\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./dashboard.component.html\";\r\nimport __NG_CLI_RESOURCE__1 from \"./dashboard.component.css\";\r\nimport { Component } from '@angular/core';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nlet DashboardComponent = class DashboardComponent {\r\n    constructor(databaseService, sharedService) {\r\n        this.databaseService = databaseService;\r\n        this.sharedService = sharedService;\r\n        this.random = '';\r\n        this.groupName = '';\r\n        this.noGroup = true;\r\n        this.currentUser = '';\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        this.currentUser = this.sharedService.getCurrentUsername();\r\n        this.disableRandom();\r\n        (_a = document.getElementById(\"list-container\")) === null || _a === void 0 ? void 0 : _a.remove();\r\n    }\r\n    async randomGroup() {\r\n        this.sharedService.setRandomClicked();\r\n        this.disableRandom();\r\n        await this.databaseService.getGroupName(this.currentUser).then((res) => {\r\n            this.groupName = res;\r\n        });\r\n        console.log(\"GROUPE CHANGE = \", parseInt(this.groupName));\r\n        parseInt(this.groupName) !== 0 ?\r\n            document.getElementById(\"already-group\").style.display = \"inline\"\r\n            :\r\n                await this.databaseService.getIncompleteGroups().then((res) => {\r\n                    this.random = res[Math.floor(Math.random() * res.length)].toString();\r\n                    document.getElementById(\"group-name\").style.display = \"inline\";\r\n                    this.databaseService.putInRandomGroup(this.currentUser, this.random);\r\n                    return res;\r\n                });\r\n    }\r\n    disableRandom() {\r\n        var _a, _b;\r\n        // console.log(this.sharedService.getRandomClicked());\r\n        if (this.sharedService.getRandomClicked()) {\r\n            (_a = document.getElementById(\"btn-random\")) === null || _a === void 0 ? void 0 : _a.setAttribute(\"style\", \"pointer-events:none\");\r\n            (_b = document.getElementById(\"btn-random\")) === null || _b === void 0 ? void 0 : _b.setAttribute(\"style\", \"background-color:gray\");\r\n        }\r\n    }\r\n};\r\nDashboardComponent.ctorParameters = () => [\r\n    { type: DatabaseService },\r\n    { type: SharedService }\r\n];\r\nDashboardComponent = __decorate([\r\n    Component({\r\n        selector: 'app-dashboard',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], DashboardComponent);\r\nexport { DashboardComponent };\r\n"]},"metadata":{},"sourceType":"module"}