{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\Users\\\\belai\\\\Documents\\\\M1\\\\Integration\\\\group_creation\\\\group-creation\\\\creation-groupes-integration\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./my-group.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./my-group.component.css\";\nimport { Component } from '@angular/core';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { SharedService } from 'src/app/services/shared.service';\nlet MyGroupComponent = class MyGroupComponent {\n  constructor(databaseService, sharedService) {\n    this.databaseService = databaseService;\n    this.sharedService = sharedService;\n    this.random = '';\n    this.groupName = '';\n    this.users = [];\n    this.noGroup = true;\n    this.currentUser = '';\n  }\n\n  ngOnInit() {\n    var _a;\n\n    this.currentUser = this.sharedService.getCurrentUsername();\n    this.groupInfos(this.currentUser);\n    this.disableRandom();\n    (_a = document.getElementById(\"list-container\")) === null || _a === void 0 ? void 0 : _a.remove();\n  }\n\n  groupInfos(username) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.databaseService.getGroupName(username).then(res => {\n        _this.groupName = res;\n      });\n      parseInt(_this.groupName) === 0 ? _this.noGroup = true : _this.noGroup = false;\n\n      if (!_this.noGroup) {\n        yield _this.databaseService.getUsers(_this.groupName).then(res => {\n          res.forEach(data => {\n            for (let i = 0; i < data.length; i++) {\n              _this.users.push(data[i]);\n            }\n          });\n        });\n      }\n    })();\n  }\n\n  quitGroup() {\n    this.databaseService.removeFromGroup(this.currentUser, this.groupName);\n    this.sharedService.setQuitCliked();\n    alert(\"Vous avez bien quittÃ© votre groupe.\");\n  }\n\n  randomGroup() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.sharedService.setRandomClicked();\n\n      _this2.disableRandom();\n\n      yield _this2.databaseService.getGroupName(_this2.currentUser).then(res => {\n        _this2.groupName = res;\n      });\n      console.log(\"GROUPE CHANGE = \", parseInt(_this2.groupName));\n      parseInt(_this2.groupName) !== 0 ? document.getElementById(\"already-group\").style.display = \"inline\" : yield _this2.databaseService.getIncompleteGroups().then(res => {\n        _this2.random = res[Math.floor(Math.random() * res.length)].toString();\n        document.getElementById(\"group-name\").style.display = \"inline\";\n\n        _this2.databaseService.putInRandomGroup(_this2.currentUser, _this2.random);\n\n        return res;\n      });\n    })();\n  }\n\n  disableRandom() {\n    var _a, _b; // console.log(this.sharedService.getRandomClicked());\n\n\n    if (this.sharedService.getRandomClicked()) {\n      (_a = document.getElementById(\"btn-random\")) === null || _a === void 0 ? void 0 : _a.setAttribute(\"style\", \"pointer-events:none\");\n      (_b = document.getElementById(\"btn-random\")) === null || _b === void 0 ? void 0 : _b.setAttribute(\"style\", \"background-color:gray\");\n    }\n  }\n\n};\n\nMyGroupComponent.ctorParameters = () => [{\n  type: DatabaseService\n}, {\n  type: SharedService\n}];\n\nMyGroupComponent = __decorate([Component({\n  selector: 'app-my-group',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], MyGroupComponent);\nexport { MyGroupComponent };","map":{"version":3,"sources":["C:/Users/belai/Documents/M1/Integration/group_creation/group-creation/creation-groupes-integration/src/app/components/users/my-group/my-group.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","DatabaseService","SharedService","MyGroupComponent","constructor","databaseService","sharedService","random","groupName","users","noGroup","currentUser","ngOnInit","_a","getCurrentUsername","groupInfos","disableRandom","document","getElementById","remove","username","getGroupName","then","res","parseInt","getUsers","forEach","data","i","length","push","quitGroup","removeFromGroup","setQuitCliked","alert","randomGroup","setRandomClicked","console","log","style","display","getIncompleteGroups","Math","floor","toString","putInRandomGroup","_b","getRandomClicked","setAttribute","ctorParameters","type","selector","template","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\Users\\\\belai\\\\Documents\\\\M1\\\\Integration\\\\group_creation\\\\group-creation\\\\creation-groupes-integration\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./my-group.component.html\";\r\nimport __NG_CLI_RESOURCE__1 from \"./my-group.component.css\";\r\nimport { Component } from '@angular/core';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nlet MyGroupComponent = class MyGroupComponent {\r\n    constructor(databaseService, sharedService) {\r\n        this.databaseService = databaseService;\r\n        this.sharedService = sharedService;\r\n        this.random = '';\r\n        this.groupName = '';\r\n        this.users = [];\r\n        this.noGroup = true;\r\n        this.currentUser = '';\r\n    }\r\n    ngOnInit() {\r\n        var _a;\r\n        this.currentUser = this.sharedService.getCurrentUsername();\r\n        this.groupInfos(this.currentUser);\r\n        this.disableRandom();\r\n        (_a = document.getElementById(\"list-container\")) === null || _a === void 0 ? void 0 : _a.remove();\r\n    }\r\n    async groupInfos(username) {\r\n        await this.databaseService.getGroupName(username).then((res) => {\r\n            this.groupName = res;\r\n        });\r\n        parseInt(this.groupName) === 0 ? this.noGroup = true : this.noGroup = false;\r\n        if (!this.noGroup) {\r\n            await this.databaseService.getUsers(this.groupName).then((res) => {\r\n                res.forEach((data) => {\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        this.users.push(data[i]);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    quitGroup() {\r\n        this.databaseService.removeFromGroup(this.currentUser, this.groupName);\r\n        this.sharedService.setQuitCliked();\r\n        alert(\"Vous avez bien quittÃ© votre groupe.\");\r\n    }\r\n    async randomGroup() {\r\n        this.sharedService.setRandomClicked();\r\n        this.disableRandom();\r\n        await this.databaseService.getGroupName(this.currentUser).then((res) => {\r\n            this.groupName = res;\r\n        });\r\n        console.log(\"GROUPE CHANGE = \", parseInt(this.groupName));\r\n        parseInt(this.groupName) !== 0 ?\r\n            document.getElementById(\"already-group\").style.display = \"inline\"\r\n            :\r\n                await this.databaseService.getIncompleteGroups().then((res) => {\r\n                    this.random = res[Math.floor(Math.random() * res.length)].toString();\r\n                    document.getElementById(\"group-name\").style.display = \"inline\";\r\n                    this.databaseService.putInRandomGroup(this.currentUser, this.random);\r\n                    return res;\r\n                });\r\n    }\r\n    disableRandom() {\r\n        var _a, _b;\r\n        // console.log(this.sharedService.getRandomClicked());\r\n        if (this.sharedService.getRandomClicked()) {\r\n            (_a = document.getElementById(\"btn-random\")) === null || _a === void 0 ? void 0 : _a.setAttribute(\"style\", \"pointer-events:none\");\r\n            (_b = document.getElementById(\"btn-random\")) === null || _b === void 0 ? void 0 : _b.setAttribute(\"style\", \"background-color:gray\");\r\n        }\r\n    }\r\n};\r\nMyGroupComponent.ctorParameters = () => [\r\n    { type: DatabaseService },\r\n    { type: SharedService }\r\n];\r\nMyGroupComponent = __decorate([\r\n    Component({\r\n        selector: 'app-my-group',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], MyGroupComponent);\r\nexport { MyGroupComponent };\r\n"]},"metadata":{},"sourceType":"module"}